<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="originalContent" value="# CodeForge ⚒️&#10;&#10;**CodeForge** is a Java-based coding practice platform that helps students and developers strengthen their algorithm and problem-solving skills.  &#10;Think of it as a simpler, friendlier alternative to LeetCode — focused on clarity, fundamentals, and mastery through repetition.&#10;&#10;---&#10;&#10;## ️ Project Docs&#10;- ✅ [Problem Statement](docs/problem-statement.md)&#10;- ✅ [User Stories (MVP)](docs/user-stories.md)&#10;- ✅ [Project Plan](docs/project-plan.md)&#10;- ✅ [Screen Designs (Low-Fi)](docs/screen-designs.md)&#10;- ✅ [Reflections](docs/reflections/WeeklyJournal.md)&#10;- ✅ [Time Log](docs/reflections/TimeLog.md)&#10;&#10;&#10;## ✨ Features (Planned / In Progress)&#10;- **Practice Mode**  &#10;  Browse algorithm challenges by topic and difficulty, write your solution, and get instant test feedback.&#10;&#10;- **Drill Mode**  &#10;  A “flashcard for code” system. Missed or skipped problems come back in future cycles until you solve them correctly — with some solved ones mixed in to re-check your mastery.&#10;&#10;- **Progress Tracking**&#10;  Track your problem status (`Correct`, `Acceptable`, `Incorrect`, `Skipped`) and see your overall improvement over time.&#10;&#10;- **Expandable Challenge Set**  &#10;  Admins/instructors can easily add new problems, test cases, and starter code to grow the platform.&#10;&#10;---&#10;&#10;##  Challenge Topics&#10;CodeForge will include challenges from:&#10;- Arrays &amp; Strings&#10;- HashMaps &amp; Sets&#10;- Stacks &amp; Queues&#10;- Recursion &amp; Backtracking&#10;- Sorting &amp; Searching&#10;- Linked Lists &amp; Trees (basics → moderate)&#10;- Introductory Dynamic Programming&#10;&#10;---&#10;&#10;##  Tech Stack&#10;- **Java** (Enterprise Java focus)&#10;- **Servlets/JSP** or **Spring Boot** (depending on class requirements)&#10;- **JUnit** for automated solution testing&#10;- **MySQL/PostgreSQL** for user data and challenge storage&#10;- **IntelliJ IDEA** as the development environment&#10;&#10;---&#10;&#10;##  Getting Started&#10;Clone the repository:&#10;```bash&#10;git clone https://github.com/ArchILLtect/code-forge.git&#10;cd code-forge&#10;```&#10;Build and run the project (example with Maven):&#10;```bash&#10;mvn clean install&#10;mvn spring-boot:run&#10;```&#10;&#10;Open in your browser at:&#10;```bash&#10;http://localhost:8080&#10;```&#10;&#10;---&#10;## ⚠️ Project Purpose&#10;This project is part of my Enterprise Java class.&#10;The goal is to demonstrate building a full-stack Java web app with authentication, persistence, and real-world application value — while creating a tool that can actually help practice coding interviews.&#10;&#10;---&#10;## ️ Roadmap&#10;- [ ] Initial project setup&#10;- [ ] User auth &amp; progress tracking&#10;- [ ] Problem database + admin interface&#10;- [ ] Practice mode (basic submission → test feedback)&#10;- [ ] Drill mode with spaced-repetition queue&#10;- [ ] Polished UI + expanded problem library&#10;&#10;---&#10;##  License&#10;MIT License — feel free to use, fork, and improve CodeForge.&#10;&#10;---&#10;##  Acknowledgments&#10;&#10;- Inspired by platforms like LeetCode and HackerRank&#10;- Built for students who want less confusion, more clarity, and stronger fundamentals.&#10;&#10;---" />
              <option name="updatedContent" value="# CodeForge ⚒️&#10;&#10;**CodeForge** is a Java-based coding practice platform that helps students and developers strengthen their algorithm and problem-solving skills.  &#10;Think of it as a simpler, friendlier alternative to LeetCode — focused on clarity, fundamentals, and mastery through repetition.&#10;&#10;---&#10;&#10;## ️ Project Docs&#10;- ✅ [Problem Statement](docs/problem-statement.md)&#10;- ✅ [User Stories (MVP)](docs/user-stories.md)&#10;- ✅ [Project Plan](docs/project-plan.md)&#10;- ✅ [Screen Designs (Low-Fi)](docs/screen-designs.md)&#10;- ✅ [Reflections](docs/reflections/WeeklyJournal.md)&#10;- ✅ [Time Log](docs/reflections/TimeLog.md)&#10;&#10;&#10;## ✨ Features (Planned / In Progress)&#10;- **Practice Mode**  &#10;  Browse algorithm challenges by topic and difficulty, write your solution, and get instant test feedback.&#10;&#10;- **Drill Mode**  &#10;  A “flashcard for code” system. Missed or skipped problems come back in future cycles until you solve them correctly — with some solved ones mixed in to re-check your mastery.&#10;&#10;- **Progress Tracking**&#10;  Track your problem status (`Correct`, `Acceptable`, `Incorrect`, `Skipped`) and see your overall improvement over time.&#10;&#10;- **Expandable Challenge Set**  &#10;  Admins/instructors can easily add new problems, test cases, and starter code to grow the platform.&#10;&#10;---&#10;&#10;##  Challenge Topics&#10;CodeForge will include challenges from:&#10;- Arrays &amp; Strings&#10;- HashMaps &amp; Sets&#10;- Stacks &amp; Queues&#10;- Recursion &amp; Backtracking&#10;- Sorting &amp; Searching&#10;- Linked Lists &amp; Trees (basics → moderate)&#10;- Introductory Dynamic Programming&#10;&#10;---&#10;&#10;##  Tech Stack&#10;- **Java** (Enterprise Java focus)&#10;- **Servlets/JSP** or **Spring Boot** (depending on class requirements)&#10;- **JUnit** for automated solution testing&#10;- **MySQL/PostgreSQL** for user data and challenge storage&#10;- **IntelliJ IDEA** as the development environment&#10;&#10;---&#10;&#10;##  Getting Started&#10;Clone the repository:&#10;```bash&#10;git clone https://github.com/ArchILLtect/code-forge.git&#10;cd code-forge&#10;```&#10;Build and run the project (example with Maven):&#10;```bash&#10;mvn clean install&#10;mvn spring-boot:run&#10;```&#10;&#10;Open in your browser at:&#10;```bash&#10;http://localhost:8080&#10;```&#10;&#10;---&#10;## ⚠️ Project Purpose&#10;This project is part of my Enterprise Java class.&#10;The goal is to demonstrate building a full-stack Java web app with authentication, persistence, and real-world application value — while creating a tool that can actually help practice coding interviews.&#10;&#10;---&#10;## ️ Roadmap&#10;- [ ] Initial project setup&#10;- [ ] User auth &amp; progress tracking&#10;- [ ] Problem database + admin interface&#10;- [ ] Practice mode (basic submission → test feedback)&#10;- [ ] Drill mode with spaced-repetition queue&#10;- [ ] Polished UI + expanded problem library&#10;&#10;---&#10;##  License&#10;MIT License — feel free to use, fork, and improve CodeForge.&#10;&#10;---&#10;##  Acknowledgments&#10;&#10;- Inspired by platforms like LeetCode and HackerRank&#10;- Built for students who want less confusion, more clarity, and stronger fundamentals.&#10;&#10;---" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>